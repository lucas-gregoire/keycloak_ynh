#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
username=$YNH_APP_ARG_USERNAME
userpassword=$YNH_APP_ARG_USERPASSWORD
app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

config_path=/etc/$app
test ! -e "$config_path" || ynh_die "This path already contains a folder"

port=$(ynh_find_port 31000)
rootpassword=$(ynh_string_random --length=12)

ynh_webpath_register $app $domain "/"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=userpassword --value=$userpassword
ynh_app_setting_set --app=$app --key=username --value=$username
ynh_app_setting_set --app=$app --key=config_path --value=$config_path
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DOCKER
#=================================================
ynh_script_progression --message="Installing dependencies..."

if ! command_exists docker; then

	ynh_install_extra_repo --repo="https://download.docker.com/linux/debian $(lsb_release -cs) stable" --key="https://download.docker.com/linux/debian/gpg" --name="${app}-docker"

	ynh_install_app_dependencies $pkg_dependencies
fi

if ! command_exists docker-compose; then

	curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

fi 

#=================================================
# SETUP FILES
#=================================================
ynh_script_progression --message="Setting up files..."

mkdir -p $config_path

dockerapp_ynh_findreplaceallvaribles

cp ../conf/docker-compose.yml $config_path/docker-compose.yml
cp ../conf/env.example $config_path/.env
cp -r ../conf/theme $config_path

mkdir -p $config_path/certs
echo | openssl s_client -connect localhost:636 2>&1 | sed --quiet '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >$config_path/certs/yunohost.org.pem

#=================================================
# START KEYCLOAK
#=================================================
ynh_script_progression --message="Starting Keycloak..."

pushd $config_path

docker-compose --log-level CRITICAL up -d

popd

#=================================================
# GENERIC FINALIZATION
#=================================================

ynh_add_nginx_config

ynh_permission_update --permission "main" --add visitors

ynh_permission_create --permission "admin" --url "/admin/" --allowed all_users --label "Restricted access zone" --auth_header=false

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
